#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Programming Assignment 4 Report
\end_layout

\begin_layout Enumerate
Present a brief performance evaluation of your code.
 If there is a difference in performance from PA3, attempt to explain it.
 If the performance appears to have decreased, can it be justified as a
 necessary trade-off?
\end_layout

\begin_deeper
\begin_layout Itemize
The performance between PA3 and PA4 is almost the same with variable buffer
 size, when number of requests and number of worker threads are the same.
 The bounded_buffer size does not have any effect on performance.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Make two graphs for the performance of your client program with varying
 numbers of worker threads and varying size of request buffer (i.e.
 different values of “w” and “b”) for n = 10000.
 Discuss how performance changes (or fails to change) with each of them,
 and offer explanations for both.
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Graphics
	filename C:/Users/chinr/OneDrive/Pictures/CSCE313/PA4buffersize.PNG
	scale 50

\end_inset


\end_layout

\begin_layout Itemize
The average time taken with variable bounded_buffer sizes, 10 worker threads
 and 10,000 requests is 10.76048.
 The size of the buffer does not impact performance as it does not process
 any requests, it only makes sure there is no underflow and overflow.
\end_layout

\begin_layout Itemize
\begin_inset Graphics
	filename C:/Users/chinr/OneDrive/Pictures/CSCE313/PA4worker.PNG
	scale 50

\end_inset


\end_layout

\begin_layout Itemize
Performance changes as the number of worker threads increase.
 Each thread processes the requests, so time taken decreases as the number
 of worker threads increases.
\end_layout

\end_deeper
\begin_layout Enumerate
Describe the platform that your data was gathered on and the operating system
 it was running.
 A simple description like “a Raspberry PI model B running Raspbian OS,”
 or “the CSE Linux server,” is sufficient.
 (Think of this as free points)
\end_layout

\begin_deeper
\begin_layout Itemize
The data was gathered on the CSE Linux server.
\end_layout

\end_deeper
\end_body
\end_document
